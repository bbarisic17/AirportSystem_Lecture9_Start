@page "/"
@using FlightManagementBlazorServer.Services
@inject FlightService _flightService;
@inject NavigationManager _navigationManager;


<h3>Flights</h3>
<button type="button" class="btn btn-success" @onclick="OpenAddFlightPage">
    <span class="oi oi-plus"></span>
    Add Flight
</button>
@if(Flights == null)
{
    <div>Loading...</div>
}
else
{
    <table class="table table-responsive">
        <thead>
            <tr>
                <th>Number</th>
                <th>Date</th>
                <th>Time</th>
                <th>Carrier</th>
                <th>Airport to</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var flight in Flights)
            {
                <tr>
                    <td>@flight.Number</td>
                    <td>@flight.FlightDate.ToString("dd.MM.yyyy")</td>
                    <td>@flight.FlightTime</td>
                    <td>@flight.Carrier?.Name</td>
                    <td>@flight.AirportTo</td>
                    <td>
                        <a href="/EditFlight/@flight.Id" class="btn btn-primary">
                            <span class="oi oi-pencil"></span>    
                        </a>
                        <button type="button" class="btn btn-danger" @onclick="() => DeleteFlight(flight.Id)">
                            <span class="oi oi-delete"></span>
                        </button>
                        <button type="button" class="btn btn-secondary" @onclick="() => ArchiveFlight(flight.Id)">
                            <span class="oi oi-transfer"></span>
                        </button>
                    </td>
                </tr>
            }
            
        </tbody>
    </table>

}

@code {
    private List<Flight> Flights;
    protected override async Task OnInitializedAsync()
    {
        Flights = await _flightService.GetFlights();
    }

    private void OpenAddFlightPage()
    {
        _navigationManager.NavigateTo("/AddFlight");
    }

    private async Task DeleteFlight(int flightId)
    {
        await _flightService.DeleteFlight(flightId);
        Flights = await _flightService.GetFlights();
    }

    private async Task ArchiveFlight(int flightId)
    {
        await _flightService.ArchiveFlight(flightId);
        Flights = await _flightService.GetFlights();
    }
}
